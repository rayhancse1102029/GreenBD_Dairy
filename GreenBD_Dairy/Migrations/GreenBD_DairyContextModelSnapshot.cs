// <auto-generated />
using GreenBD_Dairy.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace GreenBD_Dairy.Migrations
{
    [DbContext(typeof(GreenBD_DairyContext))]
    partial class GreenBD_DairyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GreenBD_Dairy.Models.AmountSign", b =>
                {
                    b.Property<int>("AmountSignId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AmountSignName")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("OwnerSignature");

                    b.HasKey("AmountSignId");

                    b.ToTable("AmountSign");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.CowCollection", b =>
                {
                    b.Property<int>("CowCollectionId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CowCollectionName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("ManagerSignature");

                    b.HasKey("CowCollectionId");

                    b.ToTable("CowCollection");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.CowGroup", b =>
                {
                    b.Property<int>("CowGroupId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CowGroupName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("OwnerSignature");

                    b.HasKey("CowGroupId");

                    b.ToTable("CowGroup");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.CowManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CowCollectionId");

                    b.Property<int>("CowGroupId");

                    b.Property<string>("CowName")
                        .IsRequired();

                    b.Property<int>("CowNationId");

                    b.Property<int>("CowPurposeId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<DateTime>("EntryDate");

                    b.Property<int>("GenderId");

                    b.Property<float>("InitialPrice");

                    b.Property<string>("ManagerSignature");

                    b.Property<string>("OurCodeNo")
                        .IsRequired();

                    b.Property<string>("PreCodeNo")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CowCollectionId");

                    b.HasIndex("CowGroupId");

                    b.HasIndex("CowNationId");

                    b.HasIndex("CowPurposeId");

                    b.HasIndex("GenderId");

                    b.ToTable("CowManagement");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.CowPurpose", b =>
                {
                    b.Property<int>("CowPurposeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CowPurposeName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("OwnerSignature");

                    b.HasKey("CowPurposeId");

                    b.ToTable("CowPurpose");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.Days", b =>
                {
                    b.Property<int>("DayId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DayName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("OwnerSignature");

                    b.HasKey("DayId");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.Doctors", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("ManagerSignature");

                    b.Property<byte[]>("Profile")
                        .IsRequired();

                    b.Property<int>("SpecialistTypeId");

                    b.Property<float>("VisitFee");

                    b.HasKey("DoctorId");

                    b.HasIndex("SpecialistTypeId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.DoctorsSchedule", b =>
                {
                    b.Property<int>("ScheduleTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DayId");

                    b.Property<int>("DoctorId");

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("ManagerSignature");

                    b.Property<DateTime>("Time");

                    b.HasKey("ScheduleTypeId");

                    b.HasIndex("DayId");

                    b.HasIndex("DoctorId");

                    b.ToTable("DoctorsSchedule");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.FoodManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AmountSignId");

                    b.Property<string>("ComOrBrndName")
                        .IsRequired();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("FoodForm")
                        .IsRequired();

                    b.Property<string>("FoodName")
                        .IsRequired();

                    b.Property<int>("FoodTypeId");

                    b.Property<string>("ManagerSignature");

                    b.Property<float>("NumberOfProduct");

                    b.Property<int>("NumberSignId");

                    b.Property<float>("Price");

                    b.Property<int?>("ProductTypeId");

                    b.Property<string>("ShopName")
                        .IsRequired();

                    b.Property<float>("TotalPrice")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AmountSignId");

                    b.HasIndex("FoodTypeId");

                    b.HasIndex("NumberSignId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("FoodManagement");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.FoodType", b =>
                {
                    b.Property<int>("FoodTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("FoodTypeName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("OwnerSignature");

                    b.HasKey("FoodTypeId");

                    b.ToTable("FoodType");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<string>("OwnerSignature");

                    b.HasKey("GenderId");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.Investment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("OwnerSignature");

                    b.HasKey("Id");

                    b.ToTable("Investment");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.LandManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AmountSignId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<DateTime>("EntryDate");

                    b.Property<int>("GenderId");

                    b.Property<string>("LandArea")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ManagerSignature");

                    b.Property<int>("NumberSignId");

                    b.Property<float>("Price")
                        .HasMaxLength(100);

                    b.Property<string>("SellerAddress")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("SellerName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<float>("TotalPrice")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AmountSignId");

                    b.HasIndex("GenderId");

                    b.HasIndex("NumberSignId");

                    b.ToTable("LandManagement");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.Month", b =>
                {
                    b.Property<int>("MonthId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("MonthName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("OwnerSignature");

                    b.HasKey("MonthId");

                    b.ToTable("Month");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.NationOfCow", b =>
                {
                    b.Property<int>("CowNationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CowNationName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("OwnerSignature");

                    b.HasKey("CowNationId");

                    b.ToTable("NationOfCow");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.NumberSign", b =>
                {
                    b.Property<int>("NumberSignId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("NumberSignName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("OwnerSignature");

                    b.HasKey("NumberSignId");

                    b.ToTable("NumberSign");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.OthersPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Amount");

                    b.Property<int>("AmountSignId");

                    b.Property<byte>("BithCertificate");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime>("EntryDate");

                    b.Property<int>("GenderId");

                    b.Property<byte>("Image");

                    b.Property<string>("ManagerSignature");

                    b.Property<byte>("NID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<byte>("Passport");

                    b.Property<int>("RankId");

                    b.HasKey("Id");

                    b.HasIndex("AmountSignId");

                    b.HasIndex("GenderId");

                    b.HasIndex("RankId");

                    b.ToTable("OthersPayment");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("OwnerSignature");

                    b.Property<string>("PaymentMethodName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("PaymentMethodId");

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.ProductBuy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AmountSignId");

                    b.Property<string>("Condition")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("ManagerSignature");

                    b.Property<double>("NumberOfProduct");

                    b.Property<int>("NumberSignId");

                    b.Property<int>("PaymentMethodId");

                    b.Property<double>("Price");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("ProductQualityId");

                    b.Property<int>("ProductTypeId");

                    b.Property<double>("TotalPrice");

                    b.HasKey("Id");

                    b.HasIndex("AmountSignId");

                    b.HasIndex("NumberSignId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("ProductQualityId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("ProductBuy");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.ProductQuality", b =>
                {
                    b.Property<int>("ProductQualityId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("OwnerSignature");

                    b.Property<string>("ProductQualityName")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.HasKey("ProductQualityId");

                    b.ToTable("ProductQuality");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.ProductReadyToDeliver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EntryDate");

                    b.Property<float>("NumberOfProduct");

                    b.Property<int>("NumberSignId");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("ProductQualityId");

                    b.Property<int>("ProductTypeId");

                    b.Property<string>("WorkerSignature");

                    b.HasKey("Id");

                    b.HasIndex("NumberSignId");

                    b.HasIndex("ProductQualityId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("ProductReadyToDeliver");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.ProductSell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AmountSignId");

                    b.Property<string>("Condition")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("ManagerSignature");

                    b.Property<float>("NumberOfProduct");

                    b.Property<int>("NumberSignId");

                    b.Property<int>("PaymentMethodId");

                    b.Property<float>("Price");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("ProductQualityId");

                    b.Property<int>("ProductTypeId");

                    b.Property<float>("TotalPrice");

                    b.HasKey("Id");

                    b.HasIndex("AmountSignId");

                    b.HasIndex("NumberSignId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("ProductQualityId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("ProductSell");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.ProductType", b =>
                {
                    b.Property<int>("ProductTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("OwnerSignature");

                    b.Property<string>("ProductTypeName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ProductTypeId");

                    b.ToTable("ProductType");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.Rank", b =>
                {
                    b.Property<int>("RankId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("OwnerSignature");

                    b.Property<string>("RankName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("RankId");

                    b.ToTable("Rank");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.SpecialistType", b =>
                {
                    b.Property<int>("SpecialistTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("OwnerSignature");

                    b.Property<string>("SpecialistTypeName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("SpecialistTypeId");

                    b.ToTable("SpecialistType");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.Transport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("ManagerSignature");

                    b.Property<int>("TransportTypeId");

                    b.Property<string>("UsesFor")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("TransportTypeId");

                    b.ToTable("Transport");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.TransportType", b =>
                {
                    b.Property<int>("TransportTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EntryDate");

                    b.Property<string>("OwnerSignature");

                    b.Property<string>("TransportTypeName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("TransportTypeId");

                    b.ToTable("TransportType");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.WorkerManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AmountSignId");

                    b.Property<byte[]>("BithCertificate");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("EntryDate");

                    b.Property<int>("GenderId");

                    b.Property<DateTime>("JoinDate");

                    b.Property<string>("ManagerSignature");

                    b.Property<byte[]>("NID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<byte[]>("Passport");

                    b.Property<byte[]>("Profile")
                        .IsRequired();

                    b.Property<string>("Qualification")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("RankId");

                    b.Property<float>("Salary");

                    b.HasKey("Id");

                    b.HasIndex("AmountSignId");

                    b.HasIndex("GenderId");

                    b.HasIndex("RankId");

                    b.ToTable("WorkerManagement");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.WorkerSalary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AmountSignId");

                    b.Property<DateTime>("EntryDate");

                    b.Property<int?>("GenderId");

                    b.Property<int>("IdCardNumber");

                    b.Property<string>("ManagerSignature");

                    b.Property<int>("MonthId");

                    b.Property<int>("PaymentMethodId");

                    b.Property<int>("RankId");

                    b.Property<float>("Salary");

                    b.HasKey("Id");

                    b.HasIndex("AmountSignId");

                    b.HasIndex("GenderId");

                    b.HasIndex("MonthId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("RankId");

                    b.ToTable("WorkerSalary");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.CowManagement", b =>
                {
                    b.HasOne("GreenBD_Dairy.Models.CowCollection", "CowCollection")
                        .WithMany("CowManagement")
                        .HasForeignKey("CowCollectionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.CowGroup", "CowGroup")
                        .WithMany("CowManagement")
                        .HasForeignKey("CowGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.NationOfCow", "NationOfCow")
                        .WithMany("CowManagement")
                        .HasForeignKey("CowNationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.CowPurpose", "CowPurpose")
                        .WithMany("CowManagement")
                        .HasForeignKey("CowPurposeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.Gender", "Gender")
                        .WithMany("CowManagement")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.Doctors", b =>
                {
                    b.HasOne("GreenBD_Dairy.Models.SpecialistType", "SpecialistType")
                        .WithMany("Doctors")
                        .HasForeignKey("SpecialistTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.DoctorsSchedule", b =>
                {
                    b.HasOne("GreenBD_Dairy.Models.Days", "Days")
                        .WithMany("DoctorsSchedule")
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.Doctors", "Doctors")
                        .WithMany("DoctorsSchedule")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.FoodManagement", b =>
                {
                    b.HasOne("GreenBD_Dairy.Models.AmountSign", "AmountSign")
                        .WithMany("FoodManagement")
                        .HasForeignKey("AmountSignId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.FoodType", "FoodType")
                        .WithMany("FoodManagement")
                        .HasForeignKey("FoodTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.NumberSign", "NumberSign")
                        .WithMany("FoodManagement")
                        .HasForeignKey("NumberSignId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.ProductType")
                        .WithMany("FoodManagement")
                        .HasForeignKey("ProductTypeId");
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.LandManagement", b =>
                {
                    b.HasOne("GreenBD_Dairy.Models.AmountSign", "AmountSign")
                        .WithMany("LandManagement")
                        .HasForeignKey("AmountSignId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.Gender", "Gender")
                        .WithMany("LandManagement")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.NumberSign", "NumberSign")
                        .WithMany("LandManagement")
                        .HasForeignKey("NumberSignId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.OthersPayment", b =>
                {
                    b.HasOne("GreenBD_Dairy.Models.AmountSign", "AmountSign")
                        .WithMany("OthersPayment")
                        .HasForeignKey("AmountSignId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.Gender", "Gender")
                        .WithMany("OthersPayment")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.Rank", "Rank")
                        .WithMany("OthersPayment")
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.ProductBuy", b =>
                {
                    b.HasOne("GreenBD_Dairy.Models.AmountSign", "AmountSign")
                        .WithMany("ProductBuy")
                        .HasForeignKey("AmountSignId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.NumberSign", "NumberSign")
                        .WithMany("ProductBuy")
                        .HasForeignKey("NumberSignId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("ProductBuy")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.ProductQuality", "ProductQuality")
                        .WithMany("ProductBuy")
                        .HasForeignKey("ProductQualityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.ProductType", "ProductType")
                        .WithMany("ProductBuy")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.ProductReadyToDeliver", b =>
                {
                    b.HasOne("GreenBD_Dairy.Models.NumberSign", "NumberSign")
                        .WithMany("ProductReadyToDeliver")
                        .HasForeignKey("NumberSignId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.ProductQuality", "ProductQuality")
                        .WithMany("ProductReadyToDeliver")
                        .HasForeignKey("ProductQualityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.ProductType", "ProductType")
                        .WithMany("ProductReadyToDeliver")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.ProductSell", b =>
                {
                    b.HasOne("GreenBD_Dairy.Models.AmountSign", "AmountSign")
                        .WithMany("ProductSell")
                        .HasForeignKey("AmountSignId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.NumberSign", "NumberSign")
                        .WithMany("ProductSell")
                        .HasForeignKey("NumberSignId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("ProductSell")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.ProductQuality", "ProductQuality")
                        .WithMany("ProductSell")
                        .HasForeignKey("ProductQualityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.ProductType", "ProductType")
                        .WithMany("ProductSell")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.Transport", b =>
                {
                    b.HasOne("GreenBD_Dairy.Models.TransportType", "TransportType")
                        .WithMany("Transport")
                        .HasForeignKey("TransportTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.WorkerManagement", b =>
                {
                    b.HasOne("GreenBD_Dairy.Models.AmountSign", "AmountSign")
                        .WithMany("WorkerManagement")
                        .HasForeignKey("AmountSignId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.Gender", "Gender")
                        .WithMany("WorkerManagement")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.Rank", "Rank")
                        .WithMany("WorkerManagement")
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GreenBD_Dairy.Models.WorkerSalary", b =>
                {
                    b.HasOne("GreenBD_Dairy.Models.AmountSign")
                        .WithMany("WorkerSalary")
                        .HasForeignKey("AmountSignId");

                    b.HasOne("GreenBD_Dairy.Models.Gender")
                        .WithMany("WorkerSalary")
                        .HasForeignKey("GenderId");

                    b.HasOne("GreenBD_Dairy.Models.Month", "Month")
                        .WithMany("WorkerSalary")
                        .HasForeignKey("MonthId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("WorkerSalary")
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreenBD_Dairy.Models.Rank", "Rank")
                        .WithMany("WorkerSalary")
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
